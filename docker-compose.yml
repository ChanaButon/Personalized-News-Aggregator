version: '3.8'

services:
  # News Aggregation Service
  news-aggregation_server:
    build:
      context: ./services/news-aggregation_server
    ports:
      - "3002:3002"
    env_file:
      - ./services/news-aggregation_server/.env
    depends_on:
      - mongo
      - rabbitmq
      - redis
      - user_server
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=true"
      - "dapr.io/app-id=news-aggregation_server"
      - "dapr.io/app-port=3002"
    volumes:
      - ./dapr/components:/components

  news-aggregation-dapr:
    image: daprio/daprd:edge
    command: [
      "./daprd",
      "-app-id", "news-aggregation_server",
      "-app-port", "3002",
      "-dapr-http-port", "3501",
      "-placement-host-address", "dapr_placement:50005",
      "--log-level", "debug"
    ]
    environment:
      - DAPR_COMPONENTS_PATH=/components
    depends_on:
      - news-aggregation_server
    volumes:
      - ./dapr:/components
    network_mode: "service:news-aggregation_server"

  # User Service
  user_server:
    build:
      context: ./services/user_server
    ports:
      - "3001:3001"
    env_file:
      - ./services/user_server/.env
    depends_on:
      - mongo
      - rabbitmq
      - redis
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=true"
      - "dapr.io/app-id=user_server"
      - "dapr.io/app-port=3001"
    volumes:
      - ./dapr/components:/components

  user-dapr:
    image: daprio/daprd:edge
    command: [
      "./daprd",
      "-app-id", "user_server",
      "-app-port", "3001",
      "-dapr-http-port", "3500",
      "-placement-host-address", "dapr_placement:50005",
      "--log-level", "debug"
    ]
    environment:
      - DAPR_COMPONENTS_PATH=/components
    depends_on:
      - user_server
    volumes:
      - ./dapr:/components
    network_mode: "service:user_server"

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
    ports:
      - "3003:3003"
    env_file:
      - ./services/notification-service/.env
    depends_on:
      - redis
    networks:
      - app-network

  # Client (Frontend)
  client:
    build:
      context: ./client
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - user_server
    labels:
      - "dapr.io/enabled=true"

  # Dapr Placement Service
  dapr_placement:
    image: "daprio/dapr:latest"
    container_name: dapr_placement
    command: [ "./placement", "-port", "50005" ]
    ports:
      - "50005:50005"

  # MongoDB Database
  mongo:
    image: mongo:latest
    restart: always
    command: mongod --bind_ip_all
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=false"
    ports:
      - "27017:27017"

  # RabbitMQ (Message Broker)
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ message broker
      - "15672:15672" # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=false"

  # Redis (In-memory Data Store)
  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local
