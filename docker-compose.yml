

services:
  # News Aggregation Service
  news-aggregation_server:
    build:
      context: ./services/news-aggregation_server
    ports:
      - "3002:3002"
    env_file:
      - ./services/news-aggregation_server/.env
    depends_on:
      - mongo
      - rabbitmq
      - redis  # Add Redis as a dependency here
      - user-dapr
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=true"
      - "dapr.io/app-id=news-aggregation_server"
      - "dapr.io/app-port=3002"
    volumes:
      - ./dapr/components:/components  # Ensure pubsub.yaml is in this folder

  # Dapr for News Aggregation Service
  news-aggregation-dapr:
    image: daprio/daprd:edge
    command: [
      "./daprd",
      "-app-id", "news-aggregation_server",
      "-app-port", "3002",
      "-dapr-http-port", "3503",
      "--log-level", "debug"
    ]
    environment:
      - DAPR_COMPONENTS_PATH=/components
    depends_on:
      - news-aggregation_server
    networks:
      - app-network
    volumes:
      - ./dapr:/components  # Ensure Dapr can access pubsub.yaml
    ports:
      - "3503:3503" 

  # User Service
  user_server:
    build:
      context: ./services/user_server
    ports:
      - "3001:3001"
    env_file:
      - ./services/user_server/.env
    depends_on:
      - mongo
      - rabbitmq
      - redis  # Add Redis as a dependency here
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=true"
      - "dapr.io/app-id=user_server"
      - "dapr.io/app-port=3001"
    volumes:
      - ./dapr/components:/components  # Ensure pubsub.yaml is in this folder

  # Dapr for User Service
  user-dapr:
    image: daprio/daprd:edge
    command: [
      "./daprd",
      "-app-id", "user_server",
      "-app-port", "3001",
      "-dapr-http-port", "3505",
      "--log-level", "debug"
    ]
    environment:
      - DAPR_COMPONENTS_PATH=/components
    depends_on:
      - user_server
    networks:
      - app-network
    volumes:
      - ./dapr:/components  # Ensure Dapr can access pubsub.yaml
    ports:
      - "3505:3505" 

  # Client (Frontend)
  client:
    build:
      context: ./client
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - user_server
    labels:
      - "dapr.io/enabled=true"

  # MongoDB Database
  mongo:
    image: mongo:latest
    restart: always  
    command: mongod --bind_ip_all
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=false"
    ports:
      - "27017:27017"

  # RabbitMQ (Message Broker)
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ message broker
      - "15672:15672" # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app-network
    labels:
      - "dapr.io/enabled=false"

  # Redis (In-memory Data Store)
  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"  # Default Redis port
    networks:
      - app-network
    volumes:
      - redis-data:/data  # Persistent data storage

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local
